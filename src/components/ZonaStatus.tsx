'use client';

import { useEffect, useState, useRef } from 'react';

export function ZonaStatus() {
  const [zonaStatus, setZonaStatus] = useState({
    zona1: false,
    zona2: false,
    zona3: false,
  });

  // ‚úÖ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ useRef –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–µ–∑ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ñ–≤
  const previousStatusRef = useRef(zonaStatus);

  const fetchStatus = () => {
    fetch('https://ditgdigentis.vercel.app/api/status', { cache: 'no-store' })
      .then((res) => res.json())
      .then((data) => {
        const now = Date.now();
        const timeout = 90000; // 90 —Å–µ–∫

        const newStatus = {
          zona1: now - (data?.zona1?.timestamp ?? 0) < timeout,
          zona2: now - (data?.zona2?.timestamp ?? 0) < timeout,
          zona3: now - (data?.zona3?.timestamp ?? 0) < timeout,
        };

        const prev = previousStatusRef.current;

        // üîÅ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î —Ä–µ–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–∏
        if (
          newStatus.zona1 !== prev.zona1 ||
          newStatus.zona2 !== prev.zona2 ||
          newStatus.zona3 !== prev.zona3
        ) {
          setZonaStatus(newStatus);
          previousStatusRef.current = newStatus;
        }
      })
      .catch(() => {
        // –Ω–µ –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ (–∞–Ω—Ç–∏-–º–∏–≥–æ—Ç—ñ–Ω–Ω—è)
      });
  };

  useEffect(() => {
    fetchStatus(); // –ø–µ—Ä—à–∏–π –≤–∏–∫–ª–∏–∫ –æ–¥—Ä–∞–∑—É
    const interval = setInterval(fetchStatus, 5000); // –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="container mt-2">
      <div className="status-container-zona">
        {[1, 2, 3].map((i) => {
          const id = `zona${i}`;
          const online = zonaStatus[id as keyof typeof zonaStatus];
          return (
            <div key={id} className="zona-sensor d-flex align-items-center mb-2">
              <div className="zona-label text-warning me-2">Zona {i}</div>
              <span
                id={`pi${i}`}
                className={`indicator rounded-circle ${online ? 'connected' : 'disconnected'}`}
                title={`Raspberry Pi ${i}`}
              ></span>
              <span className="ms-2 small text-muted">{online ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}</span>
            </div>
          );
        })}
      </div>
    </div>
  );
}
